plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id "maven-publish"
    id "signing"
    id "org.jetbrains.dokka"
}

// https://kotlin.github.io/dokka/1.6.0/user_guide/gradle/usage/#configuration-options
dokkaJavadoc.configure {
    // outputDirectory.set(buildDir.resolve("dokka"))
    outputDirectory.set(new File(buildDir.toString() + File.separatorChar + "dokka"))
    // Set module name displayed in the final output
    moduleName = "Bandage"
    offlineMode.set(true)
    dokkaSourceSets {
        configureEach {
            // Do not create index pages for empty packages
            skipEmptyPackages.set(true)
            // Disable linking to online kotlin-stdlib documentation
            noStdlibLink.set(false)
            // Disable linking to online Android documentation (only applicable for Android projects)
            noAndroidSdkLink.set(false)

            // Suppress a package
            perPackageOption {
                // will match all .internal packages and sub-packages
                matchingRegex.set(".*\\.internal.*")
                suppress.set(true)
            }
        }
    }
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    compileOnly project(':bandage_stub_android')
}

afterEvaluate {
    task sourceJar(type: Jar) {
        archiveClassifier.set("sources")
        from android.sourceSets.main.kotlin.srcDirs
    }

    task dokkaJavadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        archiveClassifier.set("javadoc")
        from(dokkaJavadoc.outputDirectory)
    }

    // https://docs.gradle.org/current/userguide/publishing_maven.html
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // The default Maven POM identifying attributes are mapped as follows:
                // groupId - project.group
                // artifactId - project.name
                // version - project.version

                groupId = GROUP
                version = VERSION

                // Applies the component for the release build variant.
                artifact sourceJar
                artifact dokkaJavadocJar
                android.libraryVariants.configureEach { variant ->
                    if (variant.name == "release") {
                        artifact(packageLibraryProvider.flatMap { it.archiveFile }) {
                            extension "aar"
                            builtBy(packageLibraryProvider)
                        }
                    }
                }


                pom {
                    name = 'Bandage'
                    description = 'Bandage'
                    url = 'https://github.com/porum/Bandage'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'porum'
                            name = 'sunguo.sun'
                            email = 'sunguobao12@gmail.com'
                        }
                    }
                    scm {
                        url = "https://github.com/porum/Bandage.git"
                    }
                }
            }
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        project.ext["sonatypeUserName"] = properties.getProperty("sonatypeUserName")
        project.ext["sonatypePassword"] = properties.getProperty("sonatypePassword")
        project.ext["signing.keyId"] = properties.getProperty("signing.keyId")
        project.ext["signing.password"] = properties.getProperty("signing.password")
        project.ext["signing.secretKeyRingFile"] = properties.getProperty("signing.secretKeyRingFile")

        repositories {
            maven {
                if (VERSION.endsWith("-SNAPSHOT")) {
                    url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                } else {
                    url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                }
                credentials {
                    username project.sonatypeUserName
                    password project.sonatypePassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.release
    }
}